;;; openvr.xtm -- open vr bindings for Extempore

;; Author: David Tin Nyo
;; Keywords: extempore virtual reality vive htc valve
;; Required dylibs: openvr_api

;;; Commentary:

;;; Code:

(bind-dylib openvrlib
  (cond ((string=? (sys:platform) "OSX")
         "libopenvr_api.dylib")
        ((string=? (sys:platform) "Linux")
         "libopenvr_api.so")
        ((string=? (sys:platform) "Windows")
         "openvr_api.dll")))

;;;;;;;;;;;;;;
;; openvr_capi.h 
;;;;;;;;;;;;;;

(bind-alias HmdPtr i32*) ;;intptr_t
(bind-alias EVRInitError enum) 
(bind-alias EVRApplicationType enum)

(bind-lib openvrlib VR_InitInternal [HmdPtr,EVRInitError*,EVRApplicationType]*) 
(bind-lib openvrlib VR_ShutdownInternal [i8*]*)
(bind-lib openvrlib VR_IsHmdPresent [i1]*)
(bind-lib openvrlib VR_GetGenericInterface [HmdPtr,i8*,i32*]*)
(bind-lib openvrlib VR_IsRuntimeInstalled [i1]*)
(bind-lib openvrlib VR_GetVRInitErrorAsSymbol [i8*,i32]*)
(bind-lib openvrlib VR_GetVRInitErrorAsEnglishDescription [i8*,i32]*)

(bind-func vr-has-hmd
  (lambda ()
    (VR_IsHmdPresent)))

(bind-func vr-has-runtime
  (lambda ()
    (VR_IsRuntimeInstalled)))

;; vr-init
;; arguments:
;;  none
;; returns:
;;  HmdPtr  
(bind-func vr-init 
  (let ((init_error_ptr:i32* (salloc)))
    (lambda ()
      (let ((hmdptr (VR_InitInternal init_error_ptr 1)) ;; open as VR Scene
            (errnum (pref init_error_ptr 0)))
        (if (= errnum 0)
          hmdptr
          (begin (println "Error:" errnum ) hmdptr))))))
